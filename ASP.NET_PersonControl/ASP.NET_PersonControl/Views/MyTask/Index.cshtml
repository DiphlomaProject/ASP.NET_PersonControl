@model ASP.NET_PersonControl.ViewModels.MyTaskForUserViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Task's</h2>
<body onload="setState()">
    <div class="card">
        <button type="button" class="btn btn-primary btn-fw btn-open" data-toggle="collapse" data-target="#Panel1" id="panel1State" onclick="setCookie('Panel1')"> Active Task  (@Model.Tasks.Count()) </button>
        <div id="Panel1" class="collapse">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h2>My Tasks</h2>
                        <h4 class="card-title"></h4>
                        <div class="table-responsive">
                            <table id="group" class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Description</th>
                                        <th>Create Task</th>
                                        <th>Time Begin</th>
                                        <th>Time End</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Tasks.Count(); i++)
                                    {
                                    <tr>
                                        <td>@Html.ActionLink(Model.Tasks.ElementAt(i).title, "Index", "Home", new { @id = Model.Tasks.ElementAt(i).Id }, null)</td>

                                        <td>@Model.Tasks.ElementAt(i).description</td>

                                        @if (@Model.Tasks.ElementAt(i).userFrom != null && Model.Tasks.ElementAt(i).userFrom.DisplayName.IsEmpty() == false)
                                        {
                                            <td>@Model.Tasks.ElementAt(i).userFrom.DisplayName</td>
                                        }else if (@Model.Tasks.ElementAt(i).userFrom != null && Model.Tasks.ElementAt(i).userFrom.UserName.IsEmpty() == false)
                                        {
                                            <td>@Model.Tasks.ElementAt(i).userFrom.UserName</td>
                                        }
                                        else if (@Model.Tasks.ElementAt(i).fromUserId != null)
                                        {
                                            <td>@Model.Tasks.ElementAt(i).fromUserId</td>
                                        }else  {
                                            <td> </td>
                                        }

                                        <td>@Model.Tasks.ElementAt(i).dateTimeBegin</td>

                                        <td>@Model.Tasks.ElementAt(i).dateTimeEnd</td>


                                        @if (@Model.Tasks.ElementAt(i).isComplite.ToString() == "True")
                                        {

                                            <td><a class="badge badge-success">Completed</a></td>

                                        }
                                        else
                                        {
                                            <td>
                                                <div class="dropdown">
                                                    <button class="badge badge-warning">In progress</button>
                                                    <div class="dropdown-content">
                                                        <br />
                                                        @Html.ActionLink("Completed", "UpdateTaskPesonal", "MyTask", new { @id = Model.Tasks.ElementAt(i).Id }, new { @class = "badge badge-success" })
                                                    </div>
                                                </div>
                                            </td>

                                        }
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="card">
        <button type="button" class="btn btn-primary btn-fw btn-open" data-toggle="collapse" data-target="#Panel2" id="panel2State" onclick="setCookie('Panel2')"> Active Group Task's  (@Model.taskGroups.Count()) </button>
        <div id="Panel2" class="collapse">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h2>Group Task</h2>
                        <h4 class="card-title"></h4>
                        <div class="table-responsive">
                            <table id="group" class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Description</th>
                                        <th>Create Task</th>
                                        <th>Group Name</th>
                                        <th>Time End</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.taskGroups.Count(); i++)
                                    {
                                    <tr>
                                        <td>@Html.ActionLink(Model.taskGroups.ElementAt(i).title, "Index", "Home", new { @id = Model.taskGroups.ElementAt(i).Id }, null)</td>

                                        <td>@Model.taskGroups.ElementAt(i).description</td>

                                        @if (@Model.taskGroups.ElementAt(i).userFrom != null && Model.taskGroups.ElementAt(i).userFrom.DisplayName.IsEmpty() == false)
                                        {
                                            <td>@Model.taskGroups.ElementAt(i).userFrom.DisplayName</td>
                                        }
                                        else if (@Model.taskGroups.ElementAt(i).userFrom != null && Model.taskGroups.ElementAt(i).userFrom.UserName.IsEmpty() == false)
                                        {
                                            <td>@Model.taskGroups.ElementAt(i).userFrom.UserName</td>
                                        }
                                        else if (@Model.taskGroups.ElementAt(i).fromUserId != null)
                                        {
                                            <td>@Model.taskGroups.ElementAt(i).fromUserId</td>
                                        }
                                        else
                                        {
                                            <td> </td>
                                        }

                                        <td>@Model.groups.ElementAt(i).Title</td>

                                        <td>@Model.taskGroups.ElementAt(i).dateTimeEnd</td>


                                        @if (@Model.taskGroups.ElementAt(i).isComplite.ToString() == "True")
                                        {

                                            <td><a class="badge badge-success">Completed</a></td>

                                        }
                                        else if (Model.curUserId == Model.groups.ElementAt(i).Owner)
                                        {
                                            <td>
                                                <div class="dropdown">
                                                    <button class="badge badge-warning">In progress</button>
                                                    <div class="dropdown-content">
                                                        <br />
                                                        @Html.ActionLink("Completed", "UpdateTaskGroup", "MyTask", new { @id = Model.taskGroups.ElementAt(i).Id }, new { @class = "badge badge-success" })
                                                    </div>
                                                </div>
                                            </td>
                                        }
                                        else
                                        {
                                            <td><a class="badge badge-warning">In progress</a></td>
                                        }
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="card">
        <button type="button" class="btn btn-primary btn-fw btn-open" data-toggle="collapse"  data-target="#Panel3" id="panel3State" onclick="setCookie('Panel3')"> Active Project Task's  (@Model.taskProjects.Count()) </button>
        <div id="Panel3" class="collapse">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <h2>Project Task</h2>
                        <h4 class="card-title"></h4>
                        <div class="table-responsive">
                            <table id="group" class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Description</th>
                                        <th>Create Task</th>
                                        <th>Project Name</th>
                                        <th>Time End</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.taskProjects.Count(); i++)
                                    {
                                        <tr>
                                            <td>@Html.ActionLink(Model.taskProjects.ElementAt(i).title, "Index", "Home", new { @id = Model.taskProjects.ElementAt(i).Id }, null)</td>

                                            <td>@Model.taskProjects.ElementAt(i).description</td>

                                            @if (@Model.taskProjects.ElementAt(i).userFrom != null && Model.taskProjects.ElementAt(i).userFrom.DisplayName.IsEmpty() == false)
                                            {
                                                <td>@Model.taskProjects.ElementAt(i).userFrom.DisplayName</td>
                                            }
                                            else if (@Model.taskProjects.ElementAt(i).userFrom != null && Model.taskProjects.ElementAt(i).userFrom.UserName.IsEmpty() == false)
                                            {
                                                <td>@Model.taskProjects.ElementAt(i).userFrom.UserName</td>
                                            }
                                            else if (@Model.taskProjects.ElementAt(i).fromUserId != null)
                                            {
                                                <td>@Model.taskProjects.ElementAt(i).fromUserId</td>
                                            }
                                            else
                                            {
                                                <td> </td>
                                            }

                                            <td>@Model.taskProjects.ElementAt(i).dateTimeBegin</td>

                                            <td>@Model.taskProjects.ElementAt(i).dateTimeEnd</td>


                                            @if (@Model.taskProjects.ElementAt(i).isComplite.ToString() == "True")
                                            {

                                                <td><a class="badge badge-success">Completed</a></td>

                                            }
                                            else/* if (@Model.taskProjects.ElementAt(i).isComplite.ToString() == "False" && (User.IsInRole("Manager") || User.IsInRole("Admin")))*/
                                            {
                                                <td>
                                                    <div class="dropdown">
                                                        <button class="badge badge-warning">In progress</button>
                                                        <div class="dropdown-content">
                                                            <br />
                                                            @Html.ActionLink("Completed", "UpdateTaskProjects", "MyTask", new { @id = Model.taskProjects.ElementAt(i).Id }, new { @class = "badge badge-success" })
                                                        </div>
                                                    </div>
                                                </td>
                                            }
                                            @*else if (@Model.taskProjects.ElementAt(i).isComplite.ToString() == "False")
                                            {
                                                 <td><a class="badge badge-warning">In progress</a></td>
                                            }*@
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
    @section scripts
    {
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
        <script src="~/js/panelState.js"></script>
    }
