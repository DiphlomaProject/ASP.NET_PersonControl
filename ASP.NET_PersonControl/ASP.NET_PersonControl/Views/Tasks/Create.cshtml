@model ASP.NET_PersonControl.ViewModels.TasksForUserViewModel

@{
    ViewBag.Title = "Create";
}
<style>
    /* Style The Dropdown Button */
    .dropbtn {
        background-color: #4CAF50;
        color: white;
        padding: 16px;
        font-size: 16px;
        border: none;
        cursor: pointer;
    }

    /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
        display: none;
        position: center;
        background-color: #f9f9f9;
        min-width: 10px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        /* Links inside the dropdown */
        .dropdown-content a {
            color: black;
            padding: 12px 12px;
            text-decoration: none;
            display: block;
        }

            /* Change color of dropdown links on hover */
            .dropdown-content a:hover {
                background-color: #f1f1f1
            }

    /* Show the dropdown menu on hover */
    .dropdown:hover .dropdown-content {
        display: block;
    }

    /* Change the background color of the dropdown button when the dropdown content is shown */
    .dropdown:hover .dropbtn {
        background-color: #3e8e41;
    }
</style>
@*<h2>Create</h2>*@
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />


@using (Html.BeginForm("SavePersonTask", "Tasks"))
{
    @Html.AntiForgeryToken()

    <div class="col-md-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Create Personal Task </h4>
                <p class="card-description">
                    @*Basic form elements*@
                </p>
                <form class="forms-sample">
                    
                    <div class="form-group">
                        @Html.HiddenFor(m => Model.user.Id)
                      
                    </div>
                    <div class="form-group">
                        @Html.Label("To user", htmlAttributes: new { })
                        <br />
                        @Html.DropDownListFor(m => m.userTo.Id, new SelectList(Model.toUser, "Id", "DisplayName"), "Enter Owner", new { id = "normalDropDown", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.userTo.Id, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Title ", htmlAttributes: new { })
                        <br />
                        @Html.EditorFor(Model => Model.tasksForUser.title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Title" } })
                        @Html.ValidationMessageFor(model => Model.tasksForUser.title, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(Model => Model.tasksForUser.description, htmlAttributes: new { })
                        <br />
                        @Html.TextAreaFor(Model => Model.tasksForUser.description, htmlAttributes: new { @class = "form-control", @rows = "4", @placeholder = "Description" })
                        @Html.ValidationMessageFor(model => Model.tasksForUser.description, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.Label("Begin time", htmlAttributes: new { })
                        <br />
                        @Html.EditorFor(model => Model.tasksForUser.dateTimeBegin, new { htmlAttributes = new { @class = "form-control", id = "datepicker1", @placeholder = "Time Start" } })
                    </div>
                    <div class="form-group">
                        @Html.Label("Until Time", htmlAttributes: new { })
                        <br />
                        @Html.EditorFor(model => Model.tasksForUser.dateTimeEnd, new { htmlAttributes = new { @class = "form-control", id = "datepicker2" } })
                    </div>
                    <br />




                    <input type="submit" value="Create" class="btn btn-success mr-2" />
                    <input class="btn btn-light" type="button" value="Cancel" onclick="@("window.location.href='" + @Url.Action("Index", "Tasks") + "'");" />
                </form>
            </div>
        </div>
    </div>
}

@section scripts{
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script>
        const https = require("https");
        const url = "https://pushfleet.com/api/v1/send?appid=AQ7WRE44&userid=UMQDXQC3,U2222222&message='Test OK'&url='test.com'"
        https.get(url, res => {
            res.setEncoding("utf8");
            let body = "";
            res.on("data", data => {
                body += data;
            });
            res.on("end", () => {
                body = JSON.parse(body);
                console.log(body);
            });
        });
    </script>
    <script>
        $("#datepicker1").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-M-yy',
            changeYear: true,
            yearRange: "2018:2038",
            showButtonPanel: true
        });

        $("#datepicker2").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-M-yy',
            changeYear: true,
            yearRange: "2018:2038",
            showButtonPanel: true
        });

        $(function () {
            $("#normalDropDown").chosen();
        });

        $(function () {
            $("#normalDropDown3").chosen();
        });


    </script>
}
