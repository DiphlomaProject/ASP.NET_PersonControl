@model ASP.NET_PersonControl.ViewModels.ProjectsFormViewModel

@{
    ViewBag.Title = "Create";
}

@*<h2>Create</h2>*@
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

@*@using (Html.BeginForm("Save", "Project"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="form-group">
                    @Html.LabelFor(Model => Model.project.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.customer.Id, new SelectList(Model.customers, "Id", "Company"), "Enter Customer", new { id = "normalDropDown", @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.project.Customer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    @Html.Label("Project Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => Model.project.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.project.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(Model => Model.project.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(Model => Model.project.Description, 10, 55, null)
                        @Html.ValidationMessageFor(model => Model.project.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label(" Price", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => Model.project.PriceInDollars, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.project.PriceInDollars, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(Model => Model.project.isComplite, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBoxFor(Model => Model.project.isComplite, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.project.isComplite, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Begin time", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => Model.project.BeginTime, new { htmlAttributes = new { @class = "form-control", id = "datepicker1" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Until Time", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => Model.project.UntilTime, new { htmlAttributes = new { @class = "form-control", id = "datepicker2" } })
                    </div>
                </div>
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                    <input class="btn" type="button" value="Cancel" onclick="@("window.location.href='" + @Url.Action("Index", "Project") + "'");" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@using (Html.BeginForm("Save", "Project"))
{
    @Html.AntiForgeryToken()
    <div class="col-md-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Create Project</h4>
                <p class="card-description">
                    @*Basic form elements*@
                </p>
                <form class="forms-sample">
                    <div class="form-group">
                        @Html.LabelFor(Model => Model.project.Customer, htmlAttributes: new { })
                        @*<input type="text" class="form-control" id="exampleInputName1" placeholder="Name">*@
                        <br />
                        @Html.DropDownListFor(m => m.customer.Id, new SelectList(Model.customers, "Id", "Company"), "Enter Customer", new { id = "normalDropDown", @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.project.Customer, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Project Name", htmlAttributes: new { })
                        <br />
                        @Html.EditorFor(model => Model.project.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Title" } })
                        @Html.ValidationMessageFor(model => Model.project.Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(Model => Model.project.Description, htmlAttributes: new { })
                        <br />
                        @Html.TextAreaFor(Model => Model.project.Description, htmlAttributes: new { @class = "form-control", @rows = "4", @placeholder = "ect" })
                        @Html.ValidationMessageFor(model => Model.project.Description, "", new { @class = "text-danger" })

                    </div>
                    @using (Html.BeginForm())
                    {
                        <div class="form-group">
                            @Html.HiddenFor(model => Model.group.Id)
                            <label>Select Groups</label>
                            <br />
                            @Html.ListBoxFor(m => m.SelectedIDArray, new MultiSelectList(Model.groups, "Id", "Title"), new { id = "normalDropDown3", multiple = "multiple", @class = "form-control", @placeholder = "no groups" })

                        </div>
                    }
                    <div class="form-group">
                        @Html.Label(" Price", htmlAttributes: new { })
                        <br />
                        @Html.EditorFor(model => Model.project.PriceInDollars, new { htmlAttributes = new { @class = "form-control", @placeholder = "Price" } })
                        @Html.ValidationMessageFor(model => Model.project.PriceInDollars, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">

                        @Html.Label("Status", htmlAttributes: new { })
                        <br />
                        &nbsp;&nbsp;&nbsp;   @Html.CheckBoxFor(Model => Model.project.isComplite, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => Model.project.isComplite, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Begin time", htmlAttributes: new { })
                        <br />
                        @Html.EditorFor(model => Model.project.BeginTime, new { htmlAttributes = new { @class = "form-control", id = "datepicker1", @placeholder = "Time Start" } })
                    </div>
                    <div class="form-group">
                        @Html.Label("Until Time", htmlAttributes: new { })
                        <br />
                        @Html.EditorFor(model => Model.project.UntilTime, new { htmlAttributes = new { @class = "form-control", id = "datepicker2" } })
                    </div>
                    <br />
                    <div  id="dropArea">
                        Drop your files here
                    </div>
                    <br />
                    <h4>Uploaded files : </h4>
                    <ul class="list-group" id="uploadList"></ul>

                    <style>
                        #dropArea {
                            background: #b5b5b5;
                            border: black dashed 1px;
                            height: 50px;
                            text-align: center;
                            color: #fff;
                            padding-top: 12px;
                        }

                        .active-drop {
                            background: #77bafa !important;
                            border: solid 2px blue !important;
                            opacity: .5;
                            color: blue !important;
                        }
                    </style>

                    <input type="submit" value="Create" class="btn btn-success mr-2" />
                    <input class="btn btn-light" type="button" value="Cancel" onclick="@("window.location.href='" + @Url.Action("Index", "Project") + "'");" />
                </form>
            </div>
        </div>
    </div>
}

@section scripts{
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script src="~/Scripts/jquery.filedrop.js"></script>
    @*<script>
            $("#datepicker1").datetimepicker({



            }).on('dp.change', function (e) {
                $(this).data("DateTimePicker").hide();
            });
        </script>*@

    <script>
        $("#datepicker1").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-M-yy',
            changeYear: true,
            yearRange: "2018:2038",
            showButtonPanel: true
        });

        $("#datepicker2").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: 'dd-M-yy',
            changeYear: true,
            yearRange: "2018:2038",
            showButtonPanel: true
        });

        $(function () {
            $("#normalDropDown").chosen();
        });

        $(function () {
            $("#normalDropDown3").chosen();
        });

          $(function () {
            $('#dropArea').filedrop({
                url: '@Url.Action("UploadFiles")',
                allowedfiletypes: ['image/jpeg', 'image/png', 'image/gif'],
                allowedfileextensions: ['.jpg', '.jpeg', '.png', '.gif'],
                paramname: 'files',
                maxfiles: 5,
                maxfilesize: 5, // in MB
                dragOver: function () {
                    $('#dropArea').addClass('active-drop');
                },
                dragLeave: function () {
                    $('#dropArea').removeClass('active-drop');
                },
                drop: function () {
                    $('#dropArea').removeClass('active-drop');
                },
                afterAll: function (e) {
                    $('#dropArea').html('file(s) uploaded successfully');
                },
                uploadFinished: function (i, file, response, time) {
                    $('#uploadList').append('<li class="list-group-item">'+file.name+'</li>')
                }
            })
        })
    </script>




    @*<script type="text/javascript">
        $(function () {
            $('#dropArea').filedrop({
                url: '@Url.Action("UploadFiles")',
                allowedfiletypes: ['image/jpeg', 'image/png', 'image/gif'],
                allowedfileextensions: ['.jpg', '.jpeg', '.png', '.gif'],
                paramname: 'files',
                maxfiles: 5,
                maxfilesize: 5, // in MB
                dragOver: function () {
                    $('#dropArea').addClass('active-drop');
                },
                dragLeave: function () {
                    $('#dropArea').removeClass('active-drop');
                },
                drop: function () {
                    $('#dropArea').removeClass('active-drop');
                },
                afterAll: function (e) {
                    $('#dropArea').html('file(s) uploaded successfully');
                },
                uploadFinished: function (i, file, response, time) {
                    $('#uploadList').append('<li class="list-group-item">'+file.name+'</li>')
                }
            })
        })
    </script>*@
}
