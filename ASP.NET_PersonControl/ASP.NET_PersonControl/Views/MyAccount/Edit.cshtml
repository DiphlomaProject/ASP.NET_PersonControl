@model ASP.NET_PersonControl.Models.ApplicationUser


<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<!------ Include the above in your HEAD tag ---------->
<head>
    <title>Bootstrap Example</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

</head>

<hr>
    <div class="container bootstrap snippet">
        <div class="row">
            <div class="col-sm-3">
                <!--left col-->

                <div class="text-center">

                    <img id="dataID" src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(Model.img))" class="img-circle" width="150" alt="avatar" />
                    
                    @using (Html.BeginForm("Upload", "MyAccount", FormMethod.Post, new { id = "formid", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <br />
                        @*<input id="fileID" type="file" name="file" onchange="readURL()" /><br><br>*@
                        @*<label for="fileID" class="btn btn-info btn-fw" id="btnid"> <i class="mdi mdi-upload"></i>Photo</label>

            <input id="fileID" type="file" name="file" style="display: none;" onchange="readURL()">
            <br />
            <button type="submit" value="Upload" class="btn btn-info btn-fw" id="btnid">
                <i class="mdi mdi-upload"></i>Upload
            </button>*@

                        <input id="fileID" type="file" name="file" onchange="readURL()" style="display: none;" /><br><br>
                        <label for="fileID" class="btn btn-outline-warning btn-rounded btn-fw" id="btnid"> <i class="mdi mdi-upload"></i>Take Photo</label><br><br>
                        <button type="submit" value="Upload" class="btn btn-outline-success btn-rounded btn-fw" id="btnid">
                            <i class="mdi mdi-upload"></i>Upload
                        </button>

                    }

                </div></hr><br>



                <ul class="list-group">
                    <li class="list-group-item text-muted">Activity <i class="fa fa-dashboard fa-1x"></i></li>
                    <li class="list-group-item text-right"><span class="pull-left"><strong>Project</strong></span> 125</li>
                    <li class="list-group-item text-right"><span class="pull-left"><strong>Group</strong></span> 13</li>
                    <li class="list-group-item text-right"><span class="pull-left"><strong>Task Complete</strong></span> 13</li>
                </ul>
            </div><!--/col-3-->
            <div class="col-sm-9">
             
                <div class="tab-content">
                    <div class="tab-pane active" id="home">
                        <hr>
                        @using (Html.BeginForm("Save", "MyAccount"))
                        {
                            @Html.AntiForgeryToken()
                            
                                <div class="form-group">
                                    <h1>My Profile</h1>
                                    <div class="col-xs-6">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <br />
                                        <label>Name</label>
                                        <br />
                                        @*<input value="@Model.DisplayName" placeholder="Full name" class="form-control form-control-line">*@
                                        @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Full name" } })
                                        @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">

                                    <div class="col-xs-6">
                                        <br />
                                        <label>Country</label>
                                        <br />
                                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", @placeholder = "Country" } })
                                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    <div class="col-xs-6">
                                        <br />
                                        <label for="phone">Phone</label>
                                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "123-456-789" } })
                                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-xs-6">
                                        <br />
                                        <label>City</label>
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">

                                    <div class="col-xs-6">
                                        <br />

                                        <label>Role</label>
                                        <input value=" @foreach (string roleName in Model.RoleNames)
                                        {@roleName;
                                        }" placeholder="no info" class="form-control form-control-line" readonly>

                                    </div>
                                </div>
                                <div class="form-group">

                                    <div class="col-xs-6">
                                        <br />
                                        <label>Address</label>
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">

                                    <div class="col-xs-6">
                                        <br />
                                        <label>Email</label>
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" ,@readonly="true"} })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="form-group">

                                    <div class="col-xs-6">
                                        <br />
                                        <label>Verify</label>
                                        @if (Model.EmailConfirmed.ToString() == "True")
                                        {
                                            <br />
                                            @Html.HiddenFor(m => m.EmailConfirmed)
                                            <label class="badge badge-success">Completed</label>

                                        }
                                        else
                                        {
                                            <br />
                                            @Html.HiddenFor(m => m.EmailConfirmed)
                                            <label class="badge badge-warning">In progress</label>

                                        }
                                    </div>
                                </div>
                            <div class="form-group">
                                <div class="col-xs-12">
                                    <br>
                                    @Html.HiddenFor(m => m.Id)
                                    <button class="btn btn-outline-success btn-rounded btn-fw">Save</button>
                                    <input class="btn btn-outline-danger btn-rounded btn-fw" type="button" value="Cancel" onclick="@("window.location.href='" + @Url.Action("Index", "MyAccount") + "'");" />
                                </div>
                            </div>
                        }

                        <hr>

                    </div><!--/tab-pane-->



                </div><!--/tab-pane-->
            </div><!--/tab-content-->
        </div><!--/col-9-->
    </div><!--/row-->


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/Scripts/uploadfile")
        @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
        <script>
            function readURL() {
                var input = ($("#fileID"))[0];
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#dataID')
                            .attr('src', e.target.result)
                            .width(150)
                            .height(150);
                        document.getElementById('fileID').value = e.target.result;
                        //alert(e.target.result);
                    };
                    reader.readAsDataURL(input.files[0]);
                }
            }
        </script>
    }